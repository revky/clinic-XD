<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="employeeRoleDataSet" targetNamespace="http://tempuri.org/employeeRoleDataSet.xsd" xmlns:mstns="http://tempuri.org/employeeRoleDataSet.xsd" xmlns="http://tempuri.org/employeeRoleDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="Ustawienie" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Ustawienie (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.formsClinicProject.Properties.Settings.GlobalReference.Default.Ustawienie" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Employee_roleTableAdapter" GeneratorDataComponentClassName="Employee_roleTableAdapter" Name="Employee_role" UserDataComponentName="Employee_roleTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Ustawienie (Settings)" DbObjectName="clinic4.dbo.Employee_role" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Employee_role] WHERE (([id_employee_role] = @Original_id_employee_role) AND ([role] = @Original_role))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_employee_role" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_employee_role" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_role" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="role" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Employee_role] ([role]) VALUES (@role);
SELECT id_employee_role, role FROM Employee_role WHERE (id_employee_role = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@role" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="role" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id_employee_role, role FROM dbo.Employee_role</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Employee_role] SET [role] = @role WHERE (([id_employee_role] = @Original_id_employee_role) AND ([role] = @Original_role));
SELECT id_employee_role, role FROM Employee_role WHERE (id_employee_role = @id_employee_role)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@role" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="role" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_employee_role" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_employee_role" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_role" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="role" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id_employee_role" ColumnName="id_employee_role" DataSourceName="clinic4.dbo.Employee_role" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id_employee_role" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id_employee_role" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id_employee_role" DataSetColumn="id_employee_role" />
              <Mapping SourceColumn="role" DataSetColumn="role" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="employeeRoleDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="employeeRoleDataSet" msprop:Generator_UserDSName="employeeRoleDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Employee_role" msprop:Generator_TableClassName="Employee_roleDataTable" msprop:Generator_TableVarName="tableEmployee_role" msprop:Generator_TablePropName="Employee_role" msprop:Generator_RowDeletingName="Employee_roleRowDeleting" msprop:Generator_RowChangingName="Employee_roleRowChanging" msprop:Generator_RowEvHandlerName="Employee_roleRowChangeEventHandler" msprop:Generator_RowDeletedName="Employee_roleRowDeleted" msprop:Generator_UserTableName="Employee_role" msprop:Generator_RowChangedName="Employee_roleRowChanged" msprop:Generator_RowEvArgName="Employee_roleRowChangeEvent" msprop:Generator_RowClassName="Employee_roleRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id_employee_role" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnid_employee_role" msprop:Generator_ColumnPropNameInRow="id_employee_role" msprop:Generator_ColumnPropNameInTable="id_employee_roleColumn" msprop:Generator_UserColumnName="id_employee_role" type="xs:int" />
              <xs:element name="role" msprop:Generator_ColumnVarNameInTable="columnrole" msprop:Generator_ColumnPropNameInRow="role" msprop:Generator_ColumnPropNameInTable="roleColumn" msprop:Generator_UserColumnName="role">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Employee_role" />
      <xs:field xpath="mstns:id_employee_role" />
    </xs:unique>
  </xs:element>
</xs:schema>